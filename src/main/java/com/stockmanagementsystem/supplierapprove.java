/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stockmanagementsystem;

import static com.stockmanagementsystem.utils.Logging.LOGGER;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pratap
 */
public class supplierapprove extends javax.swing.JFrame {

    /**
     * Creates new form addtocart
     */
    String roll;

    public supplierapprove() {
        initComponents();
        roll = "";
        initValues();
        viewOrders();
    }

    private void initValues() {
        try {
            this.setLocationRelativeTo(null);
        } catch (Exception ex) {
            LOGGER.log(Level.SEVERE, "{0}", ex);
        }

    }


    private void viewOrders(){
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        model.setRowCount(0);
        int total = 0;
        String tot = "";

        //   ProductInformation.categoryChooser = "electronics";
        try {
            Connection con = DBConnect.getConnection();

            Statement stmt = con.createStatement();
            String query = "select * from purchase ";
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                String bill_no = rs.getString("biilno");
                String id = rs.getString("item_id");
                String name = rs.getString("item_name");
                String qun = rs.getString("quantity");
                String price1 = rs.getString("price");

                String mfd = rs.getString("totprice");

                model.addRow(new Object[]{bill_no, id, name, qun, price1, mfd});
            }
            rs.close();
            /*   int success=stmt.executeUpdate(query);
                            if(success==1)
                            {
                                JOptionPane.showMessageDialog(this, "Product Successfully updated to inventory");
                               //emp1.showMessageDialog(this, "Problem in Saving. Retry");
                            }
                            else
                            {

                                JOptionPane.showMessageDialog(this, "Problem in Saving. Retry");
                            }
            //stmt.close();*/
            //con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            //e.printStackTrace();
        }
        double sum = 0;
        for (int i = 0; i < table2.getRowCount(); i++) {
            sum = sum + Double.parseDouble(table2.getValueAt(i, 4).toString());
        }
        jLabel2.setText(Double.toString(sum));
//String b=jLabel2.getText();

// TODO add your handling code here:
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Supplier Approve Orders");

        table2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM ID", "ITEM NAME", "QUANTITY", "UNIT PRICE", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.setRowMargin(3);
        jScrollPane1.setViewportView(table2);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Total Amount");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton3.setText("Approve order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        Slogin mm = new Slogin();
        mm.setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        workWithDatabase();

    }

    public void workWithDatabase() {        
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        int selectedRowIndex = table2.getSelectedRow();
        String bill_no = model.getValueAt(selectedRowIndex, 0).toString();
        String item_id = model.getValueAt(selectedRowIndex, 1).toString();
        String quantity = model.getValueAt(selectedRowIndex, 3).toString();
               
        try {
            Connection con = DBConnect.getConnection();
            String query = "update inventory set quantity=quantity+" + quantity + " where item_id=" + "'" + item_id + "'";
            String query2 = "delete from purchase where biilno=" + "'" + bill_no + "'";
      
            Statement smt3 = con.createStatement();
            int success = smt3.executeUpdate(query);
            
            Statement smt4 = con.createStatement();
            int success2 = smt4.executeUpdate(query2);     
            
            if (success == 1 && success2 == 1) {                
                JOptionPane.showMessageDialog(this, "Order Successfully Approved ");
                viewOrders();
            } else {
                JOptionPane.showMessageDialog(this, "Problem in Saving. Retry");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
